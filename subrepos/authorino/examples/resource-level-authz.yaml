apiVersion: authorino.3scale.net/v1beta1
kind: AuthConfig
metadata:
  name: talker-api-protection
spec:
  hosts:
    - talker-api
  identity:
    - name: keycloak
      oidc:
        endpoint: http://keycloak:8080/auth/realms/kuadrant
  metadata:
    - name: resource-data
      uma:
        endpoint: http://keycloak:8080/auth/realms/kuadrant
        credentialsRef:
          name: talker-api-uma-credentials
  authorization:
    - name: owned-resources
      opa:
        inlineRego: |
          COLLECTIONS = ["greetings"]

          http_request = input.context.request.http
          http_method = http_request.method
          requested_path = trim_right(http_request.path, "/")
          requested_path_sections = split(trim_left(requested_path, "/"), "/")

          get { http_method == "GET" }
          post { http_method == "POST" }
          put { http_method == "PUT" }
          delete { http_method == "DELETE" }

          valid_collection { COLLECTIONS[_] == requested_path_sections[0] }

          collection_endpoint {
            valid_collection
            count(requested_path_sections) == 1
          }

          resource_endpoint {
            valid_collection
            some resource_id
            requested_path_sections[1] = resource_id
          }

          identity_owns_the_resource {
            identity := input.auth.identity
            resource_data := object.get(input.auth.metadata, "resource-data", [])[0]
            resource_owner := object.get(object.get(resource_data, "owner", {}), "id", "")
            subject := object.get(identity, "sub", object.get(identity, "username", ""))

            resource_owner == subject
          }

          allow { get;    collection_endpoint }
          allow { post;   collection_endpoint }
          allow { get;    resource_endpoint; identity_owns_the_resource }
          allow { put;    resource_endpoint; identity_owns_the_resource }
          allow { delete; resource_endpoint; identity_owns_the_resource }
---
apiVersion: v1
kind: Secret
metadata:
  name: talker-api-uma-credentials
stringData:
  clientID: talker-api
  clientSecret: 523b92b6-625d-4e1e-a313-77e7a8ae4e88
type: Opaque
